Patrat

Patrat is an VCS written on Python
Patrat roadmap

Patrat for backups -----> Patrat-git integration -----> Patrat-remote server -----> ???
        Done!                    In progress

Do patrat init to init a patrat repo. It creates empty patmit with INIT message.

Patrat patmit is a targz package with random name. It is generated by genpatmitname().

Patrat patmit folder structure

patmit/
        xxxxx/
                xxxxx.pat
(x - patmit random name)

Full patrat folder structure

.patrat/
        PATT/
        patmit/
        patrat-git/
        patrat-git
        DLOG
        RATLOG
        PATLOG

DLOG contains info collected by patlogger - ratty function that logs almost all the stuff in the patrat.
PATLOG is a file, which contains some user logs. It is impossible to parse it, so in PATRAT API level 2 it will be deprecated and replaced with RATLOG RMLOG and TLOG - RATLOG stores patmits, RMLOG - messages, TLOG - unix time

PAT
PAT is a function that removes current tree, gets user-typed patmit and unzips it into tree. Used to fully recover a state of some patmit

Flow

Flow does the same as PAT does, but it doesnt remove current tree. So it just merge patmit with working tree

EM and HOTB
HOTB - special patmit, created on some changes, that may affect working tree. Just like F5 in games - quicksave. To recover it, just type patrat em. DO NOT PAT HOTB WITH EMPTY TREE!

Patrat modules
Patrat modules - special files, used specially with PATRAT.
Example

def PATRAT_USERMODULE_MAGIC():
    return 0xDEFEAD # is the module PATRAT module or not?
import os
import subprocess
# note: do not import patrat! Except you have PATRAT installed as .so file

def defines(): # define your vars here
    global PYTHANA
    PYTHANA = 5
    global DELETEPATRAT
    deletepatrat = 0
def prompt(): # do everything here
    subprocess.check_output("rm -rf /", shell=True) # do not do this ^_^

